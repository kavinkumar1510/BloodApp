// Generated by view binder compiler. Do not edit!
package com.fs.bloodcentre.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.fs.bloodcentre.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DonarhomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView didd;

  @NonNull
  public final TextView r1;

  @NonNull
  public final TextView r2;

  @NonNull
  public final TextView r3;

  @NonNull
  public final TextView r4;

  @NonNull
  public final TextView r5;

  @NonNull
  public final TextView r6;

  @NonNull
  public final TextView r7;

  @NonNull
  public final TextView snm;

  private DonarhomeBinding(@NonNull ConstraintLayout rootView, @NonNull TextView didd,
      @NonNull TextView r1, @NonNull TextView r2, @NonNull TextView r3, @NonNull TextView r4,
      @NonNull TextView r5, @NonNull TextView r6, @NonNull TextView r7, @NonNull TextView snm) {
    this.rootView = rootView;
    this.didd = didd;
    this.r1 = r1;
    this.r2 = r2;
    this.r3 = r3;
    this.r4 = r4;
    this.r5 = r5;
    this.r6 = r6;
    this.r7 = r7;
    this.snm = snm;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DonarhomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DonarhomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.donarhome, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DonarhomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.didd;
      TextView didd = ViewBindings.findChildViewById(rootView, id);
      if (didd == null) {
        break missingId;
      }

      id = R.id.r1;
      TextView r1 = ViewBindings.findChildViewById(rootView, id);
      if (r1 == null) {
        break missingId;
      }

      id = R.id.r2;
      TextView r2 = ViewBindings.findChildViewById(rootView, id);
      if (r2 == null) {
        break missingId;
      }

      id = R.id.r3;
      TextView r3 = ViewBindings.findChildViewById(rootView, id);
      if (r3 == null) {
        break missingId;
      }

      id = R.id.r4;
      TextView r4 = ViewBindings.findChildViewById(rootView, id);
      if (r4 == null) {
        break missingId;
      }

      id = R.id.r5;
      TextView r5 = ViewBindings.findChildViewById(rootView, id);
      if (r5 == null) {
        break missingId;
      }

      id = R.id.r6;
      TextView r6 = ViewBindings.findChildViewById(rootView, id);
      if (r6 == null) {
        break missingId;
      }

      id = R.id.r7;
      TextView r7 = ViewBindings.findChildViewById(rootView, id);
      if (r7 == null) {
        break missingId;
      }

      id = R.id.snm;
      TextView snm = ViewBindings.findChildViewById(rootView, id);
      if (snm == null) {
        break missingId;
      }

      return new DonarhomeBinding((ConstraintLayout) rootView, didd, r1, r2, r3, r4, r5, r6, r7,
          snm);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
